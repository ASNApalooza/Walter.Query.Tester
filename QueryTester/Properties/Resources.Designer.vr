Using System

DclNamespace QueryTester

///<summary>
///  A strongly-typed resource class, for looking up localized strings, etc.
///</summary>
//This class was auto-generated by the StronglyTypedResourceBuilder
//class via a tool like ResGen or Visual Studio.
//To add or remove a member, edit your .ResX file then rerun ResGen
//with the /str option, or rebuild your VS project.
BegClass Resources Access(*Internal) Attributes(System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0"), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Runtime.CompilerServices.CompilerGeneratedAttribute())
    
    BegConstructor Access(/*FamANDAssem*/ *Internal) Attributes(System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode"))
    EndConstructor
    
    DclFld resourceMan Type(*Global.System.Resources.ResourceManager) Access(*Private) Shared(*Yes)
    
    DclFld resourceCulture Type(*Global.System.Globalization.CultureInfo) Access(*Private) Shared(*Yes)
    
    ///<summary>
    ///  Returns the cached ResourceManager instance used by this class.
    ///</summary>
    BegProp ResourceManager Type(*Global.System.Resources.ResourceManager) Access(*Internal) Shared(*Yes) Attributes(System.ComponentModel.EditorBrowsableAttribute(*Global.System.ComponentModel.EditorBrowsableState.Advanced))
        BegGet
            If (System.Object.ReferenceEquals(resourceMan, *Nothing))
                DclFld temp Type(*Global.System.Resources.ResourceManager)
                temp =  *new *Global.System.Resources.ResourceManager("QueryTester.Resources", *typeof(Resources).Assembly)
                resourceMan = temp
            EndIf
            LeaveSr resourceMan
        EndGet
    EndProp
    
    ///<summary>
    ///  Overrides the current thread's CurrentUICulture property for all
    ///  resource lookups using this strongly typed resource class.
    ///</summary>
    BegProp Culture Type(*Global.System.Globalization.CultureInfo) Access(*Internal) Shared(*Yes) Attributes(System.ComponentModel.EditorBrowsableAttribute(*Global.System.ComponentModel.EditorBrowsableState.Advanced))
        BegGet
            LeaveSr resourceCulture
        EndGet
        BegSet
            resourceCulture = *PropVal
        EndSet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to Using ASNA.DataGate.Client
    ///
    ///...
    ///
    ///DclConst DBNAME   Value(&quot;*Public/Cypress&quot;)
    ///
    ///DclFld db         Type(ASNA.DataGate.Client.AdgConnection)        
    ///DclFld Query      Type(ASNA.Helpers.DataServices.QueryDriver)
    ///DclFld dt         Type(DataTable) 
    ///
    ///db = *New AdgConnection(DBNAME) 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db)
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;
    ///Query.Args.Inputs.FieldsList   = &quot;{fieldsList}&quot;
    ///Query.Args.Inputs.Rows         [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp AVRToDataTable Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("AVRToDataTable", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to Using ASNA.DataGate.Client
    ///
    ///...
    ///
    ///DclConst DBNAME     Value(&quot;*Public/Cypress&quot;)
    ///DclConst EXCEL_FILE Value(&quot;C:\spreadsheets\customers.xlsx&quot;)
    ///
    ///DclFld db           Type(ASNA.DataGate.Client.AdgConnection)        
    ///DclFld Query        Type(ASNA.Helpers.DataServices.QueryDriver)
    ///DclFld dt           Type(DataTable) 
    ///DclFld ExcelAdapter Type(ASNA.Helpers.DataServices.ToExcelAdapter)
    ///
    ///db = *New AdgConnection(DBNAME) 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db)
    ///Query.Args.Inputs.Library       [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp AVRToExcel Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("AVRToExcel", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to Using ASNA.DataGate.Client
    ///
    ///...
    ///
    ///DclConst DBNAME   Value(&quot;*Public/Cypress&quot;)
    ///
    ///DclFld db         Type(ASNA.DataGate.Client.AdgConnection)        
    ///DclFld Query      Type(ASNA.Helpers.DataServices.QueryDriver)
    ///DclFld dt         Type(DataTable) 
    ///DclFld Json       Type(*String) 
    ///
    ///db = *New AdgConnection(DBNAME) 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db)
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;
    ///Query.Args.Inputs.FieldsList   = &quot;{fieldsList [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp AVRToJson Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("AVRToJson", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to Using ASNA.DataGate.Client
    ///Using System.Web 
    ///
    ///...
    ///
    ///DclConst DBNAME     Value(&quot;*Public/Cypress&quot;)
    ///
    ///DclFld db           Type(ASNA.DataGate.Client.AdgConnection)        
    ///DclFld Query        Type(ASNA.Helpers.DataServices.QueryDriver)
    ///DclFld dt           Type(DataTable) 
    ///DclArray ListItems  Type(System.Web.UI.WebControls.ListItem) Rank(1)
    ///
    ///db = *New AdgConnection(DBNAME) 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db)
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;
    ///Query.Args.Inputs.File    [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp AVRToListItemArray Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("AVRToListItemArray", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to using ASNA.DataGate.Client;
    ///
    ///...
    ///
    ///string const DBNAME value(@&quot;*Public/Cypress&quot;);
    ///
    ///ASNA.DataGate.Client.AdgConnection db;
    ///ASNA.Helpers.DataServices.QueryDriver Query;
    ///DataTable dt;
    ///
    ///db = new AdgConnection(DBNAME); 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db);
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;;
    ///Query.Args.Inputs.FieldsList   = &quot;{fieldsList}&quot;;
    ///Query.Args.Inputs.Rows         = {rows};
    ///Query.Args.Inputs.Query        = &quot;{query}&quot;;
    /// [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp CSToDataTable Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("CSToDataTable", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to using ASNA.DataGate.Client;
    ///
    ///...
    ///
    ///string const DBNAME value(@&quot;*Public/Cypress&quot;);
    ///strong const EXCEL_FILE Value(@&quot;C:\spreadsheets\customers.xlsx&quot;);
    ///
    ///ASNA.DataGate.Client.AdgConnection db;
    ///ASNA.Helpers.DataServices.QueryDriver Query;
    ///DataTable dt;
    ///ASNA.Helpers.DataServices.ToExcelAdapter ExcelAdapter;
    ///
    ///db = new AdgConnection(DBNAME); 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db);
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;;
    ///Query.Args.Inp [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp CSToExcel Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("CSToExcel", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to using ASNA.DataGate.Client;
    ///
    ///...
    ///
    ///string const DBNAME value(@&quot;*Public/Cypress&quot;);
    ///
    ///ASNA.DataGate.Client.AdgConnection db;
    ///ASNA.Helpers.DataServices.QueryDriver Query;
    ///DataTable dt;
    ///string Json;
    ///
    ///db = new AdgConnection(DBNAME); 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db);
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;;
    ///Query.Args.Inputs.FieldsList   = &quot;{fieldsList}&quot;;
    ///Query.Args.Inputs.Rows         = {rows};
    ///Query.Args.Inputs.Query         [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp CSToJson Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("CSToJson", resourceCulture)
        EndGet
    EndProp
    
    ///<summary>
    ///  Looks up a localized string similar to using ASNA.DataGate.Client;
    ///using System.Web;
    ///
    ///...
    ///
    ///string const DBNAME value(@&quot;*Public/Cypress&quot;);
    ///
    ///ASNA.DataGate.Client.AdgConnection db;
    ///ASNA.Helpers.DataServices.QueryDriver Query;
    ///DataTable dt;
    ///System.Web.UI.WebControls.ListItem[] ListItems;
    ///
    ///db = new AdgConnection(DBNAME); 
    ///
    ///Query = *New ASNA.Helpers.DataServices.QueryDriver(db);
    ///Query.Args.Inputs.Library      = &quot;{library}&quot;;
    ///Query.Args.Inputs.File         = &quot;{file}&quot;;
    ///Query.Args.Inputs.FieldsList   = &quot;{fieldsList}&quot;;
    ///Query.Args.Inputs.R [rest of string was truncated]&quot;;.
    ///</summary>
    BegProp CSToListItemArray Type(*String) Access(*Internal) Shared(*Yes)
        BegGet
            LeaveSr ResourceManager.GetString("CSToListItemArray", resourceCulture)
        EndGet
    EndProp
    
EndClass
